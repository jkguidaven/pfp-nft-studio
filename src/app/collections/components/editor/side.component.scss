@use "sass:map";
@use "@angular/material" as mat;

@mixin theme($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary: map.get($color-config, primary);
  $accent: map.get($color-config, accent);
  $background: map.get($color-config, background);
  $is-dark-theme: map.get($color-config, "is-dark");
  $accent-color: mat.get-color-from-palette($accent, 400);
  $text-color: mat.get-color-from-palette($primary, text);
  $background-color: mat.get-color-from-palette($background, app-bar);

  .editor-side {
    box-sizing: border-box;
    width: 300px;
    height: 100%;
    display: flex;
    flex-direction: column;

    @if $is-dark-theme {
      background-color: rgba($background-color, 0.2);
    } @else {
      background-color: rgba($accent-color, 0.1);
    }

    .header,
    .add-layer-field-container {
      display: flex;
      padding: calc(var(--spacing) / 4);
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: 200;
      color: rgba($text-color, 0.8);
      height: 50px;
      box-sizing: border-box;
      align-items: center;

      @if $is-dark-theme {
        background-color: rgba($background-color, 0.25);
      } @else {
        background-color: rgba($accent-color, 0.15);
      }

      i-feather {
        stroke: $text-color;
        margin-right: 10px;
        margin-left: 5px;
        width: 20px;
        height: 20px;
      }

      mat-icon {
        cursor: pointer;
        transition: 200ms all ease-out;

        &:hover {
          color: $text-color;
        }

        &.adding {
          transform: rotate(-45deg);
        }
      }
    }

    .add-layer-field-container {
      margin-top: -20px;
      padding: 10px;
      input {
        width: 100%;
        border-radius: 5px;
        border: 1px solid black;
        outline: 0;
        height: 30px;
        padding: 10px;
        box-sizing: border-box;
      }
    }

    .layer-list {
      flex-grow: 1;
      width: 100%;
      overflow: auto;

      .layer {
        padding: calc(var(--spacing) / 4);
        display: flex;

        @if $is-dark-theme {
          border-bottom: 1px solid rgba(39, 39, 39);
          box-shadow: 0.5px 0.5px 1px rgba($accent-color, 0.1);
        } @else {
          border-bottom: 1px solid rgba($accent-color, 0.8);
        }

        i-feather {
          cursor: pointer;
          stroke: rgba($text-color, 0.5);
          transition: all 200ms ease-out;
          width: 20px;
          height: 20px;

          &.configure-button {
            display: none;
          }

          &:hover {
            stroke: $text-color;
          }

          &.expand {
            transform: rotate(90deg);
          }

          &.expand-button {
            margin-right: calc(var(--spacing) / 3);
          }
        }

        &:hover {
          i-feather {
            display: block;
          }
        }
      }
    }
  }

  .layer-tooltip {
    margin-bottom: 0px;
  }

  .cdk-drag-preview {
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);

    padding: calc(var(--spacing) / 3);
    display: flex;

    color: $text-color;

    @if $is-dark-theme {
      border-bottom: 1px solid rgba(39, 39, 39);
      box-shadow: 0.5px 0.5px 1px rgba($accent-color, 0.1);
    } @else {
      border-bottom: 1px solid rgba($accent-color, 0.8);
    }

    i-feather {
      display: none;
    }
  }

  .cdk-drag-placeholder {
    opacity: 0;
  }

  .cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }

  .layer:last-child {
    border: none;
  }

  .layer-list.cdk-drop-list-dragging .layer:not(.cdk-drag-placeholder) {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
}
